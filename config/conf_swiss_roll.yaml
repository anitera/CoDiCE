dataset:
  type: csv # or csv
  path: datasets/swiss_roll.csv
  continuous_features: ['X', 'Y', 'Z']
  categorical_features: []
  target: output

constraints_file: config/constraints_conf_swiss_roll.json
output_folder: results

model:
  model_type: classification
  model_backend: sklearn
  state: pretrained
  name: LogisticRegression
  path: models/homeloan_logistic_model.pkl
  categorical_features_encoding: label_encoder # Possible values: [onehot, label_encoder, frequency]
  continuous_features_normalization: none # Possible values: [minmax, standard, none]

cfsearch:
  optimizer: genetic # Possible values: [random, CPLEX, genetic], currently supported genetic
  loss_type: hinge
  continuous_distance:
    type: weighted_l1 # Possible values: [weighted_l1, diffusion, pydiffmap]
    diffusion_params:
      k_neighbors: 20  # the size of the local neighborhood around each point, median of the pairwise distances among a random sample of your data points.
      alpha: 1 # how many dimensions or features of the diffusion space you want to consider
      diffusion_normalization: False # standard
    weighted_l1_params:
      weights: [1, 1, 1, 1]
  categorical_distance: hamming # l1
  sparsity: False # Possible values: [True, False]
  coherence: False # Possible values: [True, False]
  search_normalization: False # standard
  search_encoding: False # frequency
  objective_function_weights: [1, 2, 0] # loss, distance, coherence TODO add sparsity
  feature_weights: False